package creationalPatterns;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;

import org.json.simple.JSONObject;
import org.json.simple.JSONArray;
import org.json.simple.parser.ParseException;
import org.json.simple.parser.JSONParser;

//https://code.google.com/p/json-simple/
//http://www.tutorialspoint.com/json/json_java_example.htm

public class JSONReader extends FileReader implements Definitions
{
	public Menu Read()
	{
		JSONParser parser = new JSONParser();
		String path = new File(JSON_FILE_NAME).getAbsolutePath();
		String fullFile = "[" + readFile(path) + "]";
		
		try
		{
			Object obj = parser.parse(fullFile);
			JSONArray array = (JSONArray)obj;
			
			for (int i = 0; i < array.size(); i++)
			{
				JSONObject js = (JSONObject) array.get(i);
			}
		}
		catch (ParseException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		//TODO:
		
		return new Menu();
	}
	
	/**
	 * Helper method
	 * Inspired by http://stackoverflow.com/questions/326390/how-to-create-a-java-string-from-the-contents-of-a-file
	 * @param path
	 * @param encoding
	 * @return
	 */
	private String readFile(String path, Charset encoding)
	{
		File jsonFile = new File(path);
		byte[] encoded = null;
		try
		{
			encoded = Files.readAllBytes(Paths.get(path));
		}
		catch (IOException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return new String(encoded, encoding);
	}
}