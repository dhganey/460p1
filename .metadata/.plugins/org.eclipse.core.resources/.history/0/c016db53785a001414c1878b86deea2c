package creationalPatterns;

import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class XMLMenuFormatter extends MenuFormatter implements Definitions
{

	public XMLMenuFormatter()
	{
		//nothing
	}

	public void format(Menu m)
	{
		//First, sort the Menu by category since that's how XML does the output
		//Inspired by http://stackoverflow.com/questions/18441846/how-sort-a-arraylist-in-java
		List<MenuItem> menuItems = m.getMenuItemList();
		Collections.sort(menuItems, new Comparator<MenuItem>() {
				@Override
				public int compare(MenuItem m1, MenuItem m2)
				{
					return m1.getCategory().ordinal() - (m2.getCategory().ordinal());
				}
			});
		
		Writer writer = null;
		try
		{
			writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("filename.txt"), "utf-8"));
			writer.write("<MenuItems>\n");
			FoodCategory curCat;
			for (int i = 0; i < menuItems.size(); i++)
			{
				MenuItem cur = menuItems.get(i);
				if (curCat == cur.getCategory())
				{
					
				}
			}
		}
		catch (UnsupportedEncodingException | FileNotFoundException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		catch (IOException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
